import { TactSourceVerifier } from "./tact-source-verifier";

const pkg =
  "eyJuYW1lIjoiRWNobyIsImNvZGUiOiJ0ZTZjY2dFQ0VBRUFBbVVBQVJUL0FQU2tFL1M4OHNnTEFRSUJZZ0lEQW9qUUFkRFRBd0Z4c01BQmtYK1JjT0lCK2tBaVVGVnZCUGhoN1VUUTFBSDRZdElBQVpJd2JZNktnUUVCMXdBQkFkSGJQT0paMnp3d01NajRRZ0hNZndIS0FNbnRWQTBFQWdGWUN3d0RYdTJpN2Z0d0lkZEp3aCtWTUNEWEN4L2VBcEpiZitBQndBQ1BFeURYU2NJZmp3dUFJTmNoMnp6YlBIL2JNZURlQlFnR0FVTEljQUhMSDI4QUFXK01iVytNQWRzOGJ5SUJ5Wk1oYnJPV0FXOGlXY3pKNkRFUEFncmJQTnM4ZndjSUFBcklBYzhXeVFFbStFRnZKQkFqWHdOL2NGQURnRUlCYlczYlBBa0I5c2h4QWNvQlVBY0J5Z0J3QWNvQ1VBWFBGbEFEK2dKd0FjcG9JMjZ6Slc2enNZNU1md0hLQU1od0Fjb0FjQUhLQUNSdXM1MS9BY29BQkNCdTh0Q0FVQVRNbGpRRGNBSEtBT0lrYnJPZGZ3SEtBQVFnYnZMUWdGQUV6SlkwQTNBQnlnRGljQUhLQUFKL0Fjb0FBc2xZekpjek13RndBY29BNGlGdXN3b0FNSngvQWNvQUFTQnU4dENBQWN5Vk1YQUJ5Z0RpeVFIN0FBQnh1NzBZSndYT3c5WFN5dWV4NkU3RG5XU29VYlpvSnduZFkxTFN0a2ZMTWkwNjh0L2ZGaU9ZSndJRlhBRzRCblk1VE9XRHF1UnlXeXc0QWorNE5pN1VUUTFBSDRZdElBQVpJd2JZNktnUUVCMXdBQkFkSGJQT0lCMnp5QTBPQUFRd2JRSlVNY2h2QUFGdmpHMXZqSXQwaGxiR3h2TENDTnM4QWRzOGJ5SUJ5Wk1oYnJPV0FXOGlXY3pKNkRIUUR3OEF1aURYU2lIWFNaY2d3Z0Fpd2dDeGprb0RieUtBZnlMUE1hc0NvUVdyQWxGVnRnZ2d3Z0NjSUtvQ0ZkY1lVRFBQRmtBVTNsbHZBbE5Cb2NJQW1jZ0Jid0pRUktHcUFvNFNNVFBDQUpuVU1OQWcxMG9oMTBtU2NDRGk0dWhmQXc9PSIsImFiaSI6IntcIm5hbWVcIjpcIkVjaG9cIixcInR5cGVzXCI6W3tcIm5hbWVcIjpcIlN0YXRlSW5pdFwiLFwiaGVhZGVyXCI6bnVsbCxcImZpZWxkc1wiOlt7XCJuYW1lXCI6XCJjb2RlXCIsXCJ0eXBlXCI6e1wia2luZFwiOlwic2ltcGxlXCIsXCJ0eXBlXCI6XCJjZWxsXCIsXCJvcHRpb25hbFwiOmZhbHNlfX0se1wibmFtZVwiOlwiZGF0YVwiLFwidHlwZVwiOntcImtpbmRcIjpcInNpbXBsZVwiLFwidHlwZVwiOlwiY2VsbFwiLFwib3B0aW9uYWxcIjpmYWxzZX19XX0se1wibmFtZVwiOlwiQ29udGV4dFwiLFwiaGVhZGVyXCI6bnVsbCxcImZpZWxkc1wiOlt7XCJuYW1lXCI6XCJib3VuY2VkXCIsXCJ0eXBlXCI6e1wia2luZFwiOlwic2ltcGxlXCIsXCJ0eXBlXCI6XCJib29sXCIsXCJvcHRpb25hbFwiOmZhbHNlfX0se1wibmFtZVwiOlwic2VuZGVyXCIsXCJ0eXBlXCI6e1wia2luZFwiOlwic2ltcGxlXCIsXCJ0eXBlXCI6XCJhZGRyZXNzXCIsXCJvcHRpb25hbFwiOmZhbHNlfX0se1wibmFtZVwiOlwidmFsdWVcIixcInR5cGVcIjp7XCJraW5kXCI6XCJzaW1wbGVcIixcInR5cGVcIjpcImludFwiLFwib3B0aW9uYWxcIjpmYWxzZSxcImZvcm1hdFwiOjI1N319LHtcIm5hbWVcIjpcInJhd1wiLFwidHlwZVwiOntcImtpbmRcIjpcInNpbXBsZVwiLFwidHlwZVwiOlwic2xpY2VcIixcIm9wdGlvbmFsXCI6ZmFsc2V9fV19LHtcIm5hbWVcIjpcIlNlbmRQYXJhbWV0ZXJzXCIsXCJoZWFkZXJcIjpudWxsLFwiZmllbGRzXCI6W3tcIm5hbWVcIjpcImJvdW5jZVwiLFwidHlwZVwiOntcImtpbmRcIjpcInNpbXBsZVwiLFwidHlwZVwiOlwiYm9vbFwiLFwib3B0aW9uYWxcIjpmYWxzZX19LHtcIm5hbWVcIjpcInRvXCIsXCJ0eXBlXCI6e1wia2luZFwiOlwic2ltcGxlXCIsXCJ0eXBlXCI6XCJhZGRyZXNzXCIsXCJvcHRpb25hbFwiOmZhbHNlfX0se1wibmFtZVwiOlwidmFsdWVcIixcInR5cGVcIjp7XCJraW5kXCI6XCJzaW1wbGVcIixcInR5cGVcIjpcImludFwiLFwib3B0aW9uYWxcIjpmYWxzZSxcImZvcm1hdFwiOjI1N319LHtcIm5hbWVcIjpcIm1vZGVcIixcInR5cGVcIjp7XCJraW5kXCI6XCJzaW1wbGVcIixcInR5cGVcIjpcImludFwiLFwib3B0aW9uYWxcIjpmYWxzZSxcImZvcm1hdFwiOjI1N319LHtcIm5hbWVcIjpcImJvZHlcIixcInR5cGVcIjp7XCJraW5kXCI6XCJzaW1wbGVcIixcInR5cGVcIjpcImNlbGxcIixcIm9wdGlvbmFsXCI6dHJ1ZX19LHtcIm5hbWVcIjpcImNvZGVcIixcInR5cGVcIjp7XCJraW5kXCI6XCJzaW1wbGVcIixcInR5cGVcIjpcImNlbGxcIixcIm9wdGlvbmFsXCI6dHJ1ZX19LHtcIm5hbWVcIjpcImRhdGFcIixcInR5cGVcIjp7XCJraW5kXCI6XCJzaW1wbGVcIixcInR5cGVcIjpcImNlbGxcIixcIm9wdGlvbmFsXCI6dHJ1ZX19XX1dLFwicmVjZWl2ZXJzXCI6W3tcInJlY2VpdmVyXCI6XCJpbnRlcm5hbFwiLFwibWVzc2FnZVwiOntcImtpbmRcIjpcInRleHRcIn19LHtcInJlY2VpdmVyXCI6XCJpbnRlcm5hbFwiLFwibWVzc2FnZVwiOntcImtpbmRcIjpcImFueVwifX1dLFwiZ2V0dGVyc1wiOlt7XCJuYW1lXCI6XCJoZWxsb1wiLFwiYXJndW1lbnRzXCI6W3tcIm5hbWVcIjpcInNyY1wiLFwidHlwZVwiOntcImtpbmRcIjpcInNpbXBsZVwiLFwidHlwZVwiOlwic3RyaW5nXCIsXCJvcHRpb25hbFwiOmZhbHNlfX1dLFwicmV0dXJuVHlwZVwiOntcImtpbmRcIjpcInNpbXBsZVwiLFwidHlwZVwiOlwic3RyaW5nXCIsXCJvcHRpb25hbFwiOmZhbHNlfX1dLFwiZXJyb3JzXCI6e1wiMlwiOntcIm1lc3NhZ2VcIjpcIlN0YWNrIHVuZGVmbG93XCJ9LFwiM1wiOntcIm1lc3NhZ2VcIjpcIlN0YWNrIG92ZXJmbG93XCJ9LFwiNFwiOntcIm1lc3NhZ2VcIjpcIkludGVnZXIgb3ZlcmZsb3dcIn0sXCI1XCI6e1wibWVzc2FnZVwiOlwiSW50ZWdlciBvdXQgb2YgZXhwZWN0ZWQgcmFuZ2VcIn0sXCI2XCI6e1wibWVzc2FnZVwiOlwiSW52YWxpZCBvcGNvZGVcIn0sXCI3XCI6e1wibWVzc2FnZVwiOlwiVHlwZSBjaGVjayBlcnJvclwifSxcIjhcIjp7XCJtZXNzYWdlXCI6XCJDZWxsIG92ZXJmbG93XCJ9LFwiOVwiOntcIm1lc3NhZ2VcIjpcIkNlbGwgdW5kZXJmbG93XCJ9LFwiMTBcIjp7XCJtZXNzYWdlXCI6XCJEaWN0aW9uYXJ5IGVycm9yXCJ9LFwiMTNcIjp7XCJtZXNzYWdlXCI6XCJPdXQgb2YgZ2FzIGVycm9yXCJ9LFwiMzJcIjp7XCJtZXNzYWdlXCI6XCJNZXRob2QgSUQgbm90IGZvdW5kXCJ9LFwiMzRcIjp7XCJtZXNzYWdlXCI6XCJBY3Rpb24gaXMgaW52YWxpZCBvciBub3Qgc3VwcG9ydGVkXCJ9LFwiMzdcIjp7XCJtZXNzYWdlXCI6XCJOb3QgZW5vdWdoIFRPTlwifSxcIjM4XCI6e1wibWVzc2FnZVwiOlwiTm90IGVub3VnaCBleHRyYS1jdXJyZW5jaWVzXCJ9LFwiMTI4XCI6e1wibWVzc2FnZVwiOlwiTnVsbCByZWZlcmVuY2UgZXhjZXB0aW9uXCJ9LFwiMTI5XCI6e1wibWVzc2FnZVwiOlwiSW52YWxpZCBzZXJpYWxpemF0aW9uIHByZWZpeFwifSxcIjEzMFwiOntcIm1lc3NhZ2VcIjpcIkludmFsaWQgaW5jb21pbmcgbWVzc2FnZVwifSxcIjEzMVwiOntcIm1lc3NhZ2VcIjpcIkNvbnN0cmFpbnRzIGVycm9yXCJ9LFwiMTMyXCI6e1wibWVzc2FnZVwiOlwiQWNjZXNzIGRlbmllZFwifSxcIjEzM1wiOntcIm1lc3NhZ2VcIjpcIkNvbnRyYWN0IHN0b3BwZWRcIn0sXCIxMzRcIjp7XCJtZXNzYWdlXCI6XCJJbnZhbGlkIGFyZ3VtZW50XCJ9LFwiMTM1XCI6e1wibWVzc2FnZVwiOlwiQ29kZSBvZiBhIGNvbnRyYWN0IHdhcyBub3QgZm91bmRcIn0sXCIxMzZcIjp7XCJtZXNzYWdlXCI6XCJJbnZhbGlkIGFkZHJlc3NcIn19fSIsImluaXQiOnsia2luZCI6ImRpcmVjdCIsImFyZ3MiOlt7Im5hbWUiOiJhIiwidHlwZSI6eyJraW5kIjoic2ltcGxlIiwidHlwZSI6ImludCIsIm9wdGlvbmFsIjpmYWxzZSwiZm9ybWF0IjoyNTd9fV0sInByZWZpeCI6eyJiaXRzIjoxLCJ2YWx1ZSI6MH0sImRlcGxveW1lbnQiOnsia2luZCI6InN5c3RlbS1jZWxsIiwic3lzdGVtIjoidGU2Y2NrRUNFZ0VBQW04QUFRSEFBUUVGb0I1UkFnRVUvd0QwcEJQMHZQTElDd01DQVdJSUJBSUJXQWNGQWorNE5pN1VUUTFBSDRZdElBQVpJd2JZNktnUUVCMXdBQkFkSGJQT0lCMnp5QkVHQWxReHlHOEFBVytNYlcrTWkzU0dWc2JHOHNJSTJ6d0Iyenh2SWdISmt5RnVzNVlCYnlKWnpNbm9NZEFRRUFCeHU3MFlKd1hPdzlYU3l1ZXg2RTdEbldTb1ViWm9Kd25kWTFMU3RrZkxNaTA2OHQvZkZpT1lKd0lGWEFHNEJuWTVUT1dEcXVSeVd5dzRBb2pRQWREVEF3RnhzTUFCa1grUmNPSUIra0FpVUZWdkJQaGg3VVRRMUFINFl0SUFBWkl3Ylk2S2dRRUIxd0FCQWRIYlBPSloyend3TU1qNFFnSE1md0hLQU1udFZCRUpBMTd0b3UzN2NDSFhTY0lmbFRBZzF3c2YzZ0tTVzMvZ0FjQUFqeE1nMTBuQ0g0OExnQ0RYSWRzODJ6eC8yekhnM2c4TUNnSUsyenpiUEg4TERBQUt5QUhQRnNrQkp2aEJieVFRSTE4RGYzQlFBNEJDQVcxdDJ6d05BZmJJY1FIS0FWQUhBY29BY0FIS0FsQUZ6eFpRQS9vQ2NBSEthQ051c3lWdXM3R09USDhCeWdESWNBSEtBSEFCeWdBa2JyT2Rmd0hLQUFRZ2J2TFFnRkFFekpZMEEzQUJ5Z0RpSkc2em5YOEJ5Z0FFSUc3eTBJQlFCTXlXTkFOd0Fjb0E0bkFCeWdBQ2Z3SEtBQUxKV015WE16TUJjQUhLQU9JaGJyTU9BRENjZndIS0FBRWdidkxRZ0FITWxURndBY29BNHNrQit3QUJRc2h3QWNzZmJ3QUJiNHh0YjR3QjJ6eHZJZ0hKa3lGdXM1WUJieUpaek1ub01SQUF1aURYU2lIWFNaY2d3Z0Fpd2dDeGprb0RieUtBZnlMUE1hc0NvUVdyQWxGVnRnZ2d3Z0NjSUtvQ0ZkY1lVRFBQRmtBVTNsbHZBbE5Cb2NJQW1jZ0Jid0pRUktHcUFvNFNNVFBDQUpuVU1OQWcxMG9oMTBtU2NDRGk0dWhmQXdBRU1HMUFoYlZUIn19LCJzb3VyY2VzIjp7ImV4YW1wbGVzL2VjaG8udGFjdCI6IlkyOXVkSEpoWTNRZ1JXTm9ieUI3Q2dvZ0lDQWdhVzVwZENoaE9pQkpiblFwSUhzS0lDQWdJQ0FnSUNBS0lDQWdJSDBLSUNBZ0lBb2dJQ0FnY21WalpXbDJaU2h0YzJjNklGTjBjbWx1WnlrZ2V3b2dJQ0FnSUNBZ0lISmxjR3g1S0cxelp5NWhjME52YlcxbGJuUW9LU2s3Q2lBZ0lDQjlDaUFnSUNBS0lDQWdJSEpsWTJWcGRtVW9iWE5uT2lCVGJHbGpaU2tnZXdvZ0lDQWdJQ0FnSUhKbGNHeDVLRzF6Wnk1aGMwTmxiR3dvS1NrN0NpQWdJQ0I5Q2dvZ0lDQWdaMlYwSUdaMWJpQm9aV3hzYnloemNtTTZJRk4wY21sdVp5azZJRk4wY21sdVp5QjdDaUFnSUNBZ0lDQWdiR1YwSUdKMWFXeGtaWEk2SUZOMGNtbHVaMEoxYVd4a1pYSWdQU0JpWldkcGJsTjBjbWx1WnlncE93b2dJQ0FnSUNBZ0lHSjFhV3hrWlhJdVlYQndaVzVrS0NKSVpXeHNieXdnSWlrN0NpQWdJQ0FnSUNBZ1luVnBiR1JsY2k1aGNIQmxibVFvYzNKaktUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1luVnBiR1JsY2k1MGIxTjBjbWx1WnlncE93b2dJQ0FnZlFwOSJ9LCJjb21waWxlciI6eyJuYW1lIjoidGFjdCIsInZlcnNpb24iOiIxLjAuMC1yYy44IiwicGFyYW1ldGVycyI6IntcImVudHJ5cG9pbnRcIjpcIi4vZXhhbXBsZXMvZWNoby50YWN0XCIsXCJvcHRpb25zXCI6e319In19";

describe("TactSourceVerifier", () => {
  it("compiles", async function () {
    const tactVerifier = new TactSourceVerifier({
      writeFile: async (_path, content) => {},
      readFile: async (path) => {
        if (path === "echo.pkg") return Buffer.from(pkg, "base64");
        throw new Error("Unknown path");
      },
    });

    const res = await tactVerifier.verify({
      compiler: "tact",
      compilerSettings: { tactVersion: "1.0.0-rc8" },
      knownContractAddress: "",
      knownContractHash: "htGkXV77gc/Tx5Z55tyTyZT8aSpmpnpkFPZpe4lPMIQ=",
      senderAddress: "",
      sources: [
        {
          path: "echo.pkg",
        },
      ],
      tmpDir: "",
    });

    expect(res.result).toEqual("similar");
  });
});
